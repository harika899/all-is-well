double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {
    int i = 0, j = 0, k;
    double merge[nums1Size + nums2Size];  // Changed float to double for better precision
    int mid = 0;

    for (k = 0; k < nums1Size + nums2Size; k++) {
       if(i < nums1Size && j < nums2Size)
       {
         if(nums1[i] < nums2[j])
         {
            merge[k] = nums1[i];
            i++;}
         else {
            merge[k] = nums2[j];
            j++;
        }
       }
        else if(i < nums1Size ){
          merge[k] = nums1[i];
          i++;
         }
        else{
          merge[k] = nums2[j];
            j++;
        }
    }
    

    mid = (nums1Size + nums2Size) / 2;
    if ((nums1Size + nums2Size) % 2 == 0) {
        double median = (merge[mid - 1] + merge[mid]) / 2.0;  // Added parentheses and changed to double
        return median;
    }
    
    return merge[mid];

}